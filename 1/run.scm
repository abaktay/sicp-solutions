(define (runtime) (get-internal-run-time))
(define (square n) (* n n))
(define (timed-prime-test n)
  (display n)
  (newline)
  (start-prime-test n (runtime)))
(define (start-prime-test n start-time)
  (if (search-for-primes n 3)
    (report-prime (- (runtime) start-time))))
(define (report-prime elapsed-time)
  (display "Time taken to run: ")
  (display elapsed-time)
  (newline))
(define (prime? n)
  (= n (smallest-divisor n)))
(define (smallest-divisor n) (find-divisor n 2))
(define (find-divisor n test-divisor)
  (cond ((> (square test-divisor) n) n)
        ((divides? test-divisor n) test-divisor)
        (else (find-divisor n (next test-divisor)))))
(define (divides? a b) (= (remainder b a) 0))
(define (next n)
  (cond ((= n 2) 3)
        (else (+ n 2))))
(define (search-for-primes n range)
  (cond ((= range 0) (newline))
        ((prime? n)
         (display n)
         (newline)
         (search-for-primes (+ n 1) (- range 1)))
        (else 
         (search-for-primes (+ n 1) range))))
(define la (timed-prime-test 10000000))
